{
  "name": "Explicit",
  "scopeName": "source.exp",
  "patterns": [
    { "include": "#meta" },
    { "include": "#leafs" },
    { "include": "#spans" },
    { "include": "#display" },
    { "include": "#blocks" },
    { "include": "#lists" },
    { "include": "#tables" },
    { "include": "#snippets" }
  ],
  "repository": {
    "list-helpers": {
      "patterns": [
        { "name": "keyword.control.list-helpers.item-delim.exp", "match": "^ *~~~$" },
        { "name": "keyword.control.list-helpers.item-begin.exp", "match": "^ *> " }
      ]
    },
    "table-helpers": {
      "patterns": [
        { "name": "keyword.control.table-helpers.row-delim.exp", "match": "^ *~~~$" },
        {
          "name": "table-helpers.cell.exp",
          "patterns": [
            { "include": "#leafs" },
            { "include": "#spans" }
          ],
          "begin": "^ *([lLcCrR] (?:[1-9]\\d* (?:[1-9]\\d* )?)?)(> )",
          "end": "$",
          "beginCaptures": {
            "1": { "name": "string.table-helpers.cell.args.exp" },
            "2": { "name": "keyword.control.table-helpers.cell.open.exp" }
          }
        }
      ]
    },
    "snippet-helpers": {
      "patterns": [
        { "name": "snippet-helpers.line.exp", "match": "^.*$" }
      ]
    },
    "meta": {
      "patterns": [
        { "name": "string.regexp.meta.title.exp", "match": "^TITLE: " },
        { "name": "string.regexp.meta.author.exp", "match": "^AUTHOR: " },
        { "name": "string.regexp.meta.date.exp", "match": "^DATE: " },
        { "name": "string.regexp.meta.categories.exp", "match": "^CATEGORIES: " },
        { "name": "string.regexp.meta.tags.exp", "match": "^TAGS: " },
        { "name": "string.regexp.meta.description.exp", "match": "^DESCRIPTION: " },
        { "name": "string.regexp.meta.overflow.exp", "match": "(?<=^DESCRIPTION\\: .{140})..*" }
      ]
    },
    "leafs": {
      "patterns": [
        { "name": "support.class.leafs.code.exp", "match": "(^`|(?<=[\\s(\\[{`/*_~^])`)((?![`]).)+`(?=[/\\s)\\]}`.?!,;:/*_~^-])" },
        { "name": "support.class.leafs.kbrd.exp", "match": "(^;|(?<=[\\s(\\[{/*_~^]);)((?![`$;]).)+;(?=[/\\s)\\]}.?!,;:/*_~^-])" },
        { "name": "support.class.leafs.emoj.exp", "match": "(^:|(?<=[\\s(\\[{/*_~^]):)(yey|lol|hehe|haha|wink|love|cool|smirk|tongue|sad|cry|wow|smile|tractor|think|party|golden|silver|bronze|farmer|1/5|2/5|3/5|4/5|5/5):(?=[/\\s)\\]}.?!,;:/*_~^-])" },
        {
          "name": "leafs.math.exp",
          "patterns": [
            { "include": "source.katex" }
          ],
          "begin": "(\\$\\$|\\$(?=\\S))",
          "end": "(\\$\\$|(?<=\\S)\\$)",
          "beginCaptures": {
            "0": { "name": "support.class.leafs.math.open.exp" }
          },
          "endCaptures": {
            "0": { "name": "support.class.leafs.math.close.exp" }
          }
        },
        {
          "name": "leafs.link.exp",
          "patterns": [
            { "include": "#leafs" },
            { "include": "#spans" }
          ],
          "begin": "\\[(?=((?!\\]).)*(\\]\\()((?:(?![\\[\\]]).)*?)(\\))((TODO)?))",
          "end": "(\\]\\()((?:(?![\\[\\]]).)*?)(\\))((TODO)?)",
          "beginCaptures": {
            "0": { "name": "support.class.leafs.link.open.exp" }
          },
          "endCaptures": {
            "1": { "name": "support.class.leafs.link.close.one.exp" },
            "2": { "name": "string.leafs.link.url.exp" },
            "3": { "name": "support.class.leafs.link.close.two.exp" },
            "4": { "name": "string.leafs.link.todo.exp" }
          }
        },
        {
          "name": "leafs.abbr.exp",
          "patterns": [
            { "include": "#leafs" },
            { "include": "#spans" }
          ],
          "begin": "\\?\\[",
          "end": "(\\]\\()((?:(?![\\[\\]\\(\\)]).)+?)(\\))",
          "beginCaptures": {
            "0": { "name": "support.class.leafs.abbr.open.exp" }
          },
          "endCaptures": {
            "1": { "name": "support.class.leafs.abbr.close.one.exp" },
            "2": { "name": "string.leafs.abbr.explanation.exp" },
            "3": { "name": "support.class.leafs.abbr.close.two.exp" }
          }
        }
      ]
    },
    "spans": {
      "patterns": [
        {
          "name": "variable.spans.bold.exp",
          "patterns": [{ "include": "#leafs" }, { "include": "#spans" }],
          "begin": "\\*\\*(?=\\S)(?!\\*)",
          "end": "(?<!\\*)(?<=\\S)\\*\\*",
          "beginCaptures": { "0": { "name": "variable.spans.bold.open.exp" } },
          "endCaptures": { "0": { "name": "variable.spans.bold.close.exp" } }
        },
        {
          "name": "variable.spans.ital.exp",
          "patterns": [{ "include": "#leafs" }, { "include": "#spans" }],
          "begin": "__(?=\\S)(?!_)",
          "end": "(?<!_)(?<=\\S)__",
          "beginCaptures": { "0": { "name": "variable.spans.ital.open.exp" } },
          "endCaptures": { "0": { "name": "variable.spans.ital.close.exp" } }
        },
        {
          "name": "variable.spans.strk.exp",
          "patterns": [{ "include": "#leafs" }, { "include": "#spans" }],
          "begin": "~~(?=\\S)(?!~)",
          "end": "(?<!~)(?<=\\S)~~",
          "beginCaptures": { "0": { "name": "variable.spans.strk.open.exp" } },
          "endCaptures": { "0": { "name": "variable.spans.strk.close.exp" } }
        },
        {
          "name": "variable.spans.high.exp",
          "patterns": [{ "include": "#leafs" }, { "include": "#spans" }],
          "begin": "\\^\\^(?=\\S)(?!\\^)",
          "end": "(?<!\\^)(?<=\\S)\\^\\^",
          "beginCaptures": { "0": { "name": "variable.spans.high.open.exp" } },
          "endCaptures": { "0": { "name": "variable.spans.high.close.exp" } }
        }
      ]
    },
    "display": {
      "patterns": [
        { "name": "constant.language.hr.exp", "match": "^ *===$" },
        { "name": "constant.language.header.exp", "match": "^ *#{2,6} " },
        {
          "name": "display.media.exp",
          "begin": "^ *!\\[",
          "end": "(\\]\\()((?:[a-z\\d]+(?:-[a-z\\d]+)*)\\.(?:png|mp4|js))(\\))$",
          "beginCaptures": {
            "0": { "name": "constant.language.media.open.exp" }
          },
          "endCaptures": {
            "1": { "name": "constant.language.media.close.one.exp" },
            "2": { "name": "string.display.media.txt.exp" },
            "3": { "name": "constant.language.media.close.two.exp" }
          }
        }
      ]
    },
    "blocks": {
      "patterns": [
        {
          "name": "block.exp",
          "patterns": [
            { "include": "#leafs" },
            { "include": "#spans" },
            { "include": "#display" },
            { "include": "#blocks" },
            { "include": "#lists" },
            { "include": "#tables" },
            { "include": "#snippets" }
          ],
          "begin": "^ *(>>>)( center| right| header)?$",
          "end": "^ *<<<$",
          "beginCaptures": {
            "1": { "name": "keyword.control.block.open.exp" },
            "2": { "name": "string.block.type.exp" }
          },
          "endCaptures": {
            "0": { "name": "keyword.control.block.close.exp" }
          }
        }
      ]
    },
    "lists": {
      "patterns": [
        {
          "name": "list.exp",
          "patterns": [
            { "include": "#leafs" },
            { "include": "#spans" },
            { "include": "#display" },
            { "include": "#blocks" },
            { "include": "#lists" },
            { "include": "#tables" },
            { "include": "#snippets" },
            { "include": "#list-helpers" }
          ],
          "begin": "^ *(\\+\\+\\+)( [1aAiI].| \\*\\*[1aAiI].\\*\\*| none)?$",
          "end": "^ *\\-\\-\\-$",
          "beginCaptures": {
            "1": { "name": "keyword.control.list.open.exp" },
            "2": { "name": "string.list.type.open.exp" }
          },
          "endCaptures": {
            "0": { "name": "keyword.control.list.close.exp" }
          }
        }
      ]
    },
    "tables": {
      "patterns": [
        {
          "name": "table.exp",
          "patterns": [
            { "include": "#leafs" },
            { "include": "#spans" },
            { "include": "#table-helpers" }
          ],
          "begin": "^ *\\?\\?\\?$",
          "end": "^ *\\!\\!\\!$",
          "beginCaptures": {
            "0": { "name": "keyword.control.table.open.exp" }
          },
          "endCaptures": {
            "0": { "name": "keyword.control.table.close.exp" }
          }
        }
      ]
    },
    "snippets": {
      "patterns": [
        {
          "name": "meta.embedded.block.js",
          "patterns": [{ "include": "source.js" }],
          "begin": "^ *(?:```|\\^\\^\\^) (html|javascript)(?: -> ((?![=>])\\S(?:(?:(?![=>]).)*(?![=>])\\S)?))?(?: => (\\S(?:.*\\S)?))?$",
          "end": "^ *(?:(?=(?:```|\\^\\^\\^) (html|css|javascript|json|c|cpp|java|python|bash|text|latex|markdown|explicit)(?: -> ((?![=>])\\S(?:(?:(?![=>]).)*(?![=>])\\S)?))?(?: => (\\S(?:.*\\S)?))?$)|```$|\\^\\^\\^$)",
          "beginCaptures": {
            "0": { "name": "keyword.control.snippet.open.exp" },
            "1": { "name": "string.snippet.lang.exp" },
            "2": { "name": "string.snippet.arg.one.exp" },
            "3": { "name": "string.snippet.arg.two.exp" }
          },
          "endCaptures": {
            "0": { "name": "keyword.control.snippet.close.exp" }
          }
        },
        {
          "name": "meta.embedded.block.css",
          "patterns": [{ "include": "source.css" }],
          "begin": "^ *(?:```|\\^\\^\\^) (css)(?: -> ((?![=>])\\S(?:(?:(?![=>]).)*(?![=>])\\S)?))?(?: => (\\S(?:.*\\S)?))?$",
          "end": "^ *(?:(?=(?:```|\\^\\^\\^) (html|css|javascript|json|c|cpp|java|python|bash|text|latex|markdown|explicit)(?: -> ((?![=>])\\S(?:(?:(?![=>]).)*(?![=>])\\S)?))?(?: => (\\S(?:.*\\S)?))?$)|```$|\\^\\^\\^$)",
          "beginCaptures": {
            "0": { "name": "keyword.control.snippet.open.exp" },
            "1": { "name": "string.snippet.lang.exp" },
            "2": { "name": "string.snippet.arg.one.exp" },
            "3": { "name": "string.snippet.arg.two.exp" }
          },
          "endCaptures": {
            "0": { "name": "keyword.control.snippet.close.exp" }
          }
        },
        {
          "name": "meta.embedded.block.json",
          "patterns": [{ "include": "source.json" }],
          "begin": "^ *(?:```|\\^\\^\\^) (json)(?: -> ((?![=>])\\S(?:(?:(?![=>]).)*(?![=>])\\S)?))?(?: => (\\S(?:.*\\S)?))?$",
          "end": "^ *(?:(?=(?:```|\\^\\^\\^) (html|css|javascript|json|c|cpp|java|python|bash|text|latex|markdown|explicit)(?: -> ((?![=>])\\S(?:(?:(?![=>]).)*(?![=>])\\S)?))?(?: => (\\S(?:.*\\S)?))?$)|```$|\\^\\^\\^$)",
          "beginCaptures": {
            "0": { "name": "keyword.control.snippet.open.exp" },
            "1": { "name": "string.snippet.lang.exp" },
            "2": { "name": "string.snippet.arg.one.exp" },
            "3": { "name": "string.snippet.arg.two.exp" }
          },
          "endCaptures": {
            "0": { "name": "keyword.control.snippet.close.exp" }
          }
        },
        {
          "name": "meta.embedded.block.c",
          "patterns": [{ "include": "source.c" }],
          "begin": "^ *(?:```|\\^\\^\\^) (c)(?: -> ((?![=>])\\S(?:(?:(?![=>]).)*(?![=>])\\S)?))?(?: => (\\S(?:.*\\S)?))?$",
          "end": "^ *(?:(?=(?:```|\\^\\^\\^) (html|css|javascript|json|c|cpp|java|python|bash|text|latex|markdown|explicit)(?: -> ((?![=>])\\S(?:(?:(?![=>]).)*(?![=>])\\S)?))?(?: => (\\S(?:.*\\S)?))?$)|```$|\\^\\^\\^$)",
          "beginCaptures": {
            "0": { "name": "keyword.control.snippet.open.exp" },
            "1": { "name": "string.snippet.lang.exp" },
            "2": { "name": "string.snippet.arg.one.exp" },
            "3": { "name": "string.snippet.arg.two.exp" }
          },
          "endCaptures": {
            "0": { "name": "keyword.control.snippet.close.exp" }
          }
        },
        {
          "name": "meta.embedded.block.cpp",
          "patterns": [{ "include": "source.cpp" }],
          "begin": "^ *(?:```|\\^\\^\\^) (cpp)(?: -> ((?![=>])\\S(?:(?:(?![=>]).)*(?![=>])\\S)?))?(?: => (\\S(?:.*\\S)?))?$",
          "end": "^ *(?:(?=(?:```|\\^\\^\\^) (html|css|javascript|json|c|cpp|java|python|bash|text|latex|markdown|explicit)(?: -> ((?![=>])\\S(?:(?:(?![=>]).)*(?![=>])\\S)?))?(?: => (\\S(?:.*\\S)?))?$)|```$|\\^\\^\\^$)",
          "beginCaptures": {
            "0": { "name": "keyword.control.snippet.open.exp" },
            "1": { "name": "string.snippet.lang.exp" },
            "2": { "name": "string.snippet.arg.one.exp" },
            "3": { "name": "string.snippet.arg.two.exp" }
          },
          "endCaptures": {
            "0": { "name": "keyword.control.snippet.close.exp" }
          }
        },
        {
          "name": "meta.embedded.block.java",
          "patterns": [{ "include": "source.java" }],
          "begin": "^ *(?:```|\\^\\^\\^) (java)(?: -> ((?![=>])\\S(?:(?:(?![=>]).)*(?![=>])\\S)?))?(?: => (\\S(?:.*\\S)?))?$",
          "end": "^ *(?:(?=(?:```|\\^\\^\\^) (html|css|javascript|json|c|cpp|java|python|bash|text|latex|markdown|explicit)(?: -> ((?![=>])\\S(?:(?:(?![=>]).)*(?![=>])\\S)?))?(?: => (\\S(?:.*\\S)?))?$)|```$|\\^\\^\\^$)",
          "beginCaptures": {
            "0": { "name": "keyword.control.snippet.open.exp" },
            "1": { "name": "string.snippet.lang.exp" },
            "2": { "name": "string.snippet.arg.one.exp" },
            "3": { "name": "string.snippet.arg.two.exp" }
          },
          "endCaptures": {
            "0": { "name": "keyword.control.snippet.close.exp" }
          }
        },
        {
          "name": "meta.embedded.block.python",
          "patterns": [{ "include": "source.python" }],
          "begin": "^ *(?:```|\\^\\^\\^) (python)(?: -> ((?![=>])\\S(?:(?:(?![=>]).)*(?![=>])\\S)?))?(?: => (\\S(?:.*\\S)?))?$",
          "end": "^ *(?:(?=(?:```|\\^\\^\\^) (html|css|javascript|json|c|cpp|java|python|bash|text|latex|markdown|explicit)(?: -> ((?![=>])\\S(?:(?:(?![=>]).)*(?![=>])\\S)?))?(?: => (\\S(?:.*\\S)?))?$)|```$|\\^\\^\\^$)",
          "beginCaptures": {
            "0": { "name": "keyword.control.snippet.open.exp" },
            "1": { "name": "string.snippet.lang.exp" },
            "2": { "name": "string.snippet.arg.one.exp" },
            "3": { "name": "string.snippet.arg.two.exp" }
          },
          "endCaptures": {
            "0": { "name": "keyword.control.snippet.close.exp" }
          }
        },
        {
          "name": "meta.embedded.block.shell",
          "patterns": [{ "include": "source.shell" }],
          "begin": "^ *(?:```|\\^\\^\\^) (bash)(?: -> ((?![=>])\\S(?:(?:(?![=>]).)*(?![=>])\\S)?))?(?: => (\\S(?:.*\\S)?))?$",
          "end": "^ *(?:(?=(?:```|\\^\\^\\^) (html|css|javascript|json|c|cpp|java|python|bash|text|latex|markdown|explicit)(?: -> ((?![=>])\\S(?:(?:(?![=>]).)*(?![=>])\\S)?))?(?: => (\\S(?:.*\\S)?))?$)|```$|\\^\\^\\^$)",
          "beginCaptures": {
            "0": { "name": "keyword.control.snippet.open.exp" },
            "1": { "name": "string.snippet.lang.exp" },
            "2": { "name": "string.snippet.arg.one.exp" },
            "3": { "name": "string.snippet.arg.two.exp" }
          },
          "endCaptures": {
            "0": { "name": "keyword.control.snippet.close.exp" }
          }
        },
        {
          "name": "meta.embedded.block.katex",
          "patterns": [{ "include": "source.katex" }],
          "begin": "^ *(?:```|\\^\\^\\^) (latex)(?: -> ((?![=>])\\S(?:(?:(?![=>]).)*(?![=>])\\S)?))?(?: => (\\S(?:.*\\S)?))?$",
          "end": "^ *(?:(?=(?:```|\\^\\^\\^) (html|css|javascript|json|c|cpp|java|python|bash|text|latex|markdown|explicit)(?: -> ((?![=>])\\S(?:(?:(?![=>]).)*(?![=>])\\S)?))?(?: => (\\S(?:.*\\S)?))?$)|```$|\\^\\^\\^$)",
          "beginCaptures": {
            "0": { "name": "keyword.control.snippet.open.exp" },
            "1": { "name": "string.snippet.lang.exp" },
            "2": { "name": "string.snippet.arg.one.exp" },
            "3": { "name": "string.snippet.arg.two.exp" }
          },
          "endCaptures": {
            "0": { "name": "keyword.control.snippet.close.exp" }
          }
        },
        {
          "name": "snippet.exp",
          "patterns": [{ "include": "#snippet-helpers" }],
          "begin": "^ *(?:```|\\^\\^\\^) (text|markdown)(?: -> ((?![=>])\\S(?:(?:(?![=>]).)*(?![=>])\\S)?))?(?: => (\\S(?:.*\\S)?))?$",
          "end": "^ *(?:(?=(?:```|\\^\\^\\^) (html|css|javascript|json|c|cpp|java|python|bash|text|latex|markdown|explicit)(?: -> ((?![=>])\\S(?:(?:(?![=>]).)*(?![=>])\\S)?))?(?: => (\\S(?:.*\\S)?))?$)|```$|\\^\\^\\^$)",
          "beginCaptures": {
            "0": { "name": "keyword.control.snippet.open.exp" },
            "1": { "name": "string.snippet.lang.exp" },
            "2": { "name": "string.snippet.arg.one.exp" },
            "3": { "name": "string.snippet.arg.two.exp" }
          },
          "endCaptures": {
            "0": { "name": "keyword.control.snippet.close.exp" }
          }
        },
        {
          "name": "meta.embedded.block.explicit",
          "patterns": [{ "include": "source.exp" }],
          "begin": "^ *(?:```|\\^\\^\\^) (explicit)(?: -> ((?![=>])\\S(?:(?:(?![=>]).)*(?![=>])\\S)?))?(?: => (\\S(?:.*\\S)?))?$",
          "end": "^ *(?:(?=(?:```|\\^\\^\\^) (html|css|javascript|json|c|cpp|java|python|bash|text|latex|markdown|explicit)(?: -> ((?![=>])\\S(?:(?:(?![=>]).)*(?![=>])\\S)?))?(?: => (\\S(?:.*\\S)?))?$)|```$|\\^\\^\\^$)",
          "beginCaptures": {
            "0": { "name": "keyword.control.snippet.open.exp" },
            "1": { "name": "string.snippet.lang.exp" },
            "2": { "name": "string.snippet.arg.one.exp" },
            "3": { "name": "string.snippet.arg.two.exp" }
          },
          "endCaptures": {
            "0": { "name": "keyword.control.snippet.close.exp" }
          }
        }
      ]
    }
  }
}
